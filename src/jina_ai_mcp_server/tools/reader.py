from ..server import mcp
from mcp.server.fastmcp import Context

@mcp.tool()
def jina_reader(
    ctx: Context,
    url: str,
    viewport: dict = None,
    inject_page_script: str = None,
    x_engine: str = None,
    x_timeout: int = None,
    x_target_selector: str = None,
    x_wait_for_selector: str = None,
    x_remove_selector: str = None,
    x_with_links_summary: str = None,
    x_with_images_summary: str = None,
    x_with_generated_alt: bool = None,
    x_no_cache: bool = None,
    x_with_iframe: bool = None,
    x_return_format: str = None,
    x_token_budget: int = None,
    x_retain_images: str = None,
    x_respond_with: str = None,
    x_set_cookie: str = None,
    x_proxy_url: str = None,
    x_proxy: str = None,
    dnt: int = None,
    x_no_gfm: bool = None,
    x_locale: str = None,
    x_robots_txt: str = None,
    x_with_shadow_dom: bool = None,
    x_base: str = None,
    x_md_heading_style: str = None,
    x_md_hr: str = None,
    x_md_bullet_list_marker: str = None,
    x_md_em_delimiter: str = None,
    x_md_strong_delimiter: str = None,
    x_md_link_style: str = None,
    x_md_link_reference_style: str = None,
) -> dict:
    """
    Retrieve/parse content from a URL in a format optimized for downstream tasks.
    """
    jina_client = ctx.fastmcp.jina_client
    return jina_client.call_reader(
        url=url,
        viewport=viewport,
        inject_page_script=inject_page_script,
        x_engine=x_engine,
        x_timeout=x_timeout,
        x_target_selector=x_target_selector,
        x_wait_for_selector=x_wait_for_selector,
        x_remove_selector=x_remove_selector,
        x_with_links_summary=x_with_links_summary,
        x_with_images_summary=x_with_images_summary,
        x_with_generated_alt=x_with_generated_alt,
        x_no_cache=x_no_cache,
        x_with_iframe=x_with_iframe,
        x_return_format=x_return_format,
        x_token_budget=x_token_budget,
        x_retain_images=x_retain_images,
        x_respond_with=x_respond_with,
        x_set_cookie=x_set_cookie,
        x_proxy_url=x_proxy_url,
        x_proxy=x_proxy,
        dnt=dnt,
        x_no_gfm=x_no_gfm,
        x_locale=x_locale,
        x_robots_txt=x_robots_txt,
        x_with_shadow_dom=x_with_shadow_dom,
        x_base=x_base,
        x_md_heading_style=x_md_heading_style,
        x_md_hr=x_md_hr,
        x_md_bullet_list_marker=x_md_bullet_list_marker,
        x_md_em_delimiter=x_md_em_delimiter,
        x_md_strong_delimiter=x_md_strong_delimiter,
        x_md_link_style=x_md_link_style,
        x_md_link_reference_style=x_md_link_reference_style,
    ) 